specVersion: "0.2.0"

name: "avalanche-subql-starter"
version: "0.0.1"
description: "This project can be use as a starting point for developing your new Avalanche SubQuery project"
repository: "https://github.com/subquery/avalanche-subql-starter"

schema:
  file: "./schema.graphql"

network:
  endpoint: "avax.dc.thechainhub.com"
  port: 9650
  genesisHash: "0x31ced5b9beb7f8782b014660da0cb18cc409f121f408186886e1ca3e8eeca96b"
  type: "avalanche"
  chainName: "C"

dataSources:
  - kind: avalanche/Runtime
    processor: {}
    startBlock: 12454857
    options:
      # Must be a key of assets
      abi: erc20
      ## Pangolin token https://snowtrace.io/token/0x60781c2586d68229fde47564546784ab3faca982
      address: "0x60781C2586D68229fde47564546784ab3fACA982"
    assets:
      erc20:
        file: "./node_modules/@pangolindex/exchange-contracts/artifacts/contracts/pangolin-core/interfaces/IPangolinERC20.sol/IPangolinERC20.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleBlock
          kind: avalanche/BlockHandler
        - handler: handleEvmEventTransfer
          kind: avalanche/EventHandler
          filter:
            topics:
              ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
              - Transfer(address indexed from, address indexed to, uint256 amount)
        - handler: handleEvmCallApprove
          kind: avalanche/TransactionHandler
          filter:
            ## The function can either be the function fragment or signature
            # function: '0x095ea7b3'
            # function: '0x7ff36ab500000000000000000000000000000000000000000000000000000000'
            function: approve(address spender, uint256 rawAmount)
            ## from: "0x60781C2586D68229fde47564546784ab3fACA982"
